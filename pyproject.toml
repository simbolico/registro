[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "registro"
dynamic = ["version"]
description = "Resource-based model system for SQLModel with automatic Resource creation and validation"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Kevin Saltarelli", email = "kevinqz@gmail.com" }
]
keywords = ["sqlmodel", "sqlalchemy", "pydantic", "resources", "models"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "sqlmodel>=0.0.8",
    "pydantic>=2.0.0",
    "ulid-py>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.272",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
]
docs = [
    "mkdocs>=1.4.3",
    "mkdocs-material>=9.1.17",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
"Homepage" = "https://github.com/simbolico/registro"
"Bug Tracker" = "https://github.com/simbolico/registro/issues"
"Documentation" = "https://simbolico.github.io/registro"
"Source Code" = "https://github.com/simbolico/registro"

[tool.hatch.version]
path = "registro/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/registro",
    "/examples",
    "README.md",
    "LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["registro"]

[tool.ruff]
select = ["E", "F", "B", "I", "N", "UP", "S", "A", "C90", "BLE", "FBT", "Q"]
ignore = ["A003", "B008", "N805"]
line-length = 100
target-version = "py38"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true 